
# edit, then copy this content or source this from ~/.bashrc (Public Domain)

# printf '%(...)T' requires bash 4.2+ (use `exec date` if older desired)

printf -v HISTFILE $HOME/.shhistories/'%(%Y%m/%Y%m%d-%H%M%S)T'.$$ -1
histdir__=${HISTFILE%/*}
test -d "$histdir__" || mkdir -p "$histdir__"
unset histdir__

test "$HISTSIZE" -gt 1 || HISTSIZE=500
#HISTCONTROL=

# $ set | grep HIST
# $ man bash ;: search HIST (especially HISTCONTROL)
HISTFILESIZE=-1
unset HISTTIMEFORMAT

# append history immediately (after command run ?)
case $PROMPT_COMMAND in *'history -a'*) ;; *)
	PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND; }history -a"
esac

# grep history
function gh () {
	case $#
	in 0)	echo "Usage: gh [daysback] [grep opts (-Hn etc.)] pattern..."
		return 1
	;; 1)	set 7 "$1"
	;; *)
		case $1
		in [1-9] | [1-9][0-9] | [1-9][0-9][0-9]) set -- "$@"
		;; [1-9][0-9][0-9][0-9] | [1-9][0-9][0-9][0-9][0-9]) set -- "$@"
		;; *) set 7 "$@"
		esac
	esac

	case $1 in *[!0-9]*) echo "'$1': not a number"; return ;; esac
	if test $# = 1
	then	echo "Usage: gh [daysback] [grep options (-Hn etc.)] pattern..."
		return 1
	fi
	#echo "$@" >&2; return
	(
		#set -x
		d=$1
		cd $HOME/.shhistories
		printf -v seconds '%(%s)T' -1
		printf -v ym '%(%Y%m)T' $(( seconds - d * 86400 ))
		#echo $seconds $ym >&2
		set +f
		set -- *
		#echo ym: $ym // dirs: "$@" >&2
		while test $# -gt 0
		do	[[ "$1" < "$ym" ]] || break
			shift
		done
		#echo jÃ¤i: "$@" >&2
		if test "$1" = "$ym" && test -d "$1"
		then	shift
			find "$PWD/$ym" -type f -name '*[0-9]' -mtime -$d | sort
		fi
		for dir
		do	test -d "$dir" || continue
			echo "$PWD/$dir"/*
		done
	) | ( shift; exec xargs grep -hi "$@" )
}

alias h="HISTTIMEFORMAT='%d/%H:%M:%S  ' history"
